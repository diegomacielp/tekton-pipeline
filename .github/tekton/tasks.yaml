apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: npm-build
spec:
  workspaces:
    - name: source
  steps:
  - name: npm-install
    image: node
    workingDir: $(workspaces.source.path)
    command:
      - /bin/sh
      - -c
    args:
      - npm install
  - name: npm-teste
    image: node
    workingDir: $(workspaces.source.path)
    command:
      - /bin/sh
      - -c
    args:
      - npm run test
  - name: npm-build
    image: node
    workingDir: $(workspaces.source.path)
    command:
      - /bin/sh
      - -c
    args:
      - npm run build
---
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: image-build-push
spec:
  workspaces:
    - name: source
  params:
    - name: PROJECT
      type: string
    - name: APPLICATION
      type: string
    - name: STORAGE_DRIVER
      default: overlay
    - name: DOCKERFILE
      default: ./Dockerfile
    - name: CONTEXT
      default: .
    - name: TLSVERIFY
      default: "false"
  results:
    - name: TAG
  steps:
    - name: image-build
      image: quay.io/buildah/upstream:latest
      workingDir: $(workspaces.source.path)
      securityContext:
        privileged: true
      script: |
        TAG=$(context.taskRun.uid)
        #buildah --storage-driver=$(params.STORAGE_DRIVER) bud \
        #--no-cache --tls-verify=$(params.TLSVERIFY) -f $(params.DOCKERFILE) \
        #-t image-registry.openshift-image-registry.svc:5000/$(params.PROJECT)/$(params.APPLICATION):$TAG
        echo -n "${TAG}" > "$(results.TAG.path)"
      volumeMounts:
        - name: varlibcontainers
          mountPath: /var/lib/containers
    - name: image-push
      image: quay.io/buildah/upstream:latest
      workingDir: $(workspaces.source.path)
      securityContext:
        privileged: true
      script: |
        TAG=$(context.taskRun.uid)
        #buildah --storage-driver=$(params.STORAGE_DRIVER) push \
        #--tls-verify=$(params.TLSVERIFY) \
        #image-registry.openshift-image-registry.svc:5000/$(params.PROJECT)/$(params.APPLICATION):$TAG
      volumeMounts:
        - name: varlibcontainers
          mountPath: /var/lib/containers 
  volumes:
    - name: varlibcontainers
      emptyDir: {}
---
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: set-tag-manifest-deployment
spec:
  workspaces:
    - name: source
  params:
    - name: PROJECT
      type: string
    - name: APPLICATION
      type: string
    - name: TAG
      type: string
  steps:
    - name: set-tag
      image: alpine
      workingDir: $(workspaces.source.path)/k8s
      script: |
        sed -i "s/newName.*/newName: image-registry.openshift-image-registry.svc:5000\/$(params.PROJECT)\/$(params.APPLICATION)/" kustomize.yaml
        sed -i "s/newTag.*/newTag: $(params.TAG)/" kustomize.yaml
